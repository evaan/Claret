version: "3"

services:
  traefik:
    image: traefik
    container_name: traefik
    restart: always
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: WebServer.Dockerfile
    environment:
      - API_URL=https://api.evaan.dev
    labels:
      - traefik.enable=true
      - traefik.port=80
      - traefik.http.routers.nginx.rule=Host(`claretformun.com`) || Host(`www.claretformun.com`)
      - traefik.http.routers.nginx.entrypoints=websecure
      - traefik.http.routers.nginx.tls=true

  postgres:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: claret
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  claretapi:
    container_name: claretAPI
    restart: always
    build:
      context: .
      dockerfile: API.Dockerfile
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      DB_URL: "postgresql://postgres:admin@postgres:5432/claret"
      PORT: 8080
      TZ: America/St_Johns
    labels:
      - traefik.enable=true
      - traefik.port=8080
      - traefik.http.routers.api.rule=Host(`api.claretformun.com`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls=true

  claretscraper:
    container_name: claretScraper
    restart: always
    build:
      context: .
      dockerfile: Scraper.Dockerfile
    depends_on:
      - postgres
    environment:
      DB_URL: "postgresql://postgres:admin@postgres:5432/claret"
      WEBHOOK_URL: ${WEBHOOK_URL}
      TZ: America/St_Johns

  icsserver:
    container_name: icsServer
    restart: always
    build:
      context: .
      dockerfile: ICSServer.Dockerfile
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    environment:
      DB_URL: "postgresql://postgres:admin@postgres:5432/claret"
      PORT: 8000
      TZ: America/St_Johns
      BANNER_TZ: America/St_Johns
    labels:
      - traefik.enable=true
      - traefik.port=8000
      - traefik.http.routers.ics.rule=Host(`ics.claretformun.com`)
      - traefik.http.routers.ics.entrypoints=websecure
      - traefik.http.routers.ics.tls=true

  discordbot:
    container_name: discordBot
    restart: always
    build:
      context: .
      dockerfile: DiscordBot.Dockerfile
    depends_on:
      - postgres
      - claretapi
    ports:
      - "8000:8000"
    environment:
      TOKEN: ${DISCORD_BOT_TOKEN}
      API_URL: https://api.claretformun.com
      GUILD_ID: ${DISCORD_GUILD_ID}
      DB_URL: "postgresql://postgres:admin@postgres:5432/claret"
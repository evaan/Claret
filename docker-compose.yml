version: "3"

networks:
  network:
    ipam:
      config:
        - subnet: 172.12.0.0/24

services:
  traefik:
    image: traefik
    container_name: traefik
    restart: always
    networks:
      network:
        ipv4_address: 172.12.0.2
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: WebServer.Dockerfile
    networks:
      network:
        ipv4_address: 172.12.0.3
    environment:
      - API_URL=https://api.evaan.dev
    labels:
      - traefik.enable=true
      - traefik.port=80
      - traefik.http.routers.nginx.rule=Host(`claretformun.com`)
      - traefik.http.routers.nginx.entrypoints=web

  postgres:
    image: postgres
    restart: always
    networks:
      network:
        ipv4_address: 172.12.0.4
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: claret
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  claretapi:
    container_name: claretAPI
    restart: always
    build:
      context: .
      dockerfile: API.Dockerfile
    networks:
      network:
        ipv4_address: 172.12.0.5
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      DB_URL: "postgresql://postgres:admin@172.12.0.4:5432/claret"
      PORT: 8080
      TZ: America/St_Johns
    labels:
      - traefik.enable=true
      - traefik.port=8080
      - traefik.http.routers.api.rule=Host(`api.claretformun.com`)
      - traefik.http.routers.api.entrypoints=web

  claretscraper:
    container_name: claretScraper
    #restart: always
    build:
      context: .
      dockerfile: Scraper.Dockerfile
    networks:
      network:
        ipv4_address: 172.12.0.6
    depends_on:
      - postgres
    environment:
      DB_URL: "postgresql://postgres:admin@172.12.0.4:5432/claret"
      PORT: 8080
      TZ: America/St_Johns
